name: CI
on:
- pull_request
- push
jobs:
  tests:
    name: Add-on testing
    runs-on: ${{ matrix.os }}
    env:
      PYTHONIOENCODING: utf-8
      PYTHONPATH: ${{ github.workspace }}/lib:${{ github.workspace }}/tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [ 2.7, 3.5, 3.6, 3.7, 3.8, 3.9 ]
        include:
          # Kodi Leia on Windows uses a bundled Python 2.7
          - os: windows-latest
            python-version: 2.7
          # Kodi Matrix on Windows uses a bundled Python 3.8
          - os: windows-latest
            python-version: 3.8
          - os: windows-latest
            python-version: 3.9
    steps:
    - name: Check out ${{ github.sha }} from repository ${{ github.repository }}
      uses: actions/checkout@v2
    - name: Setup PYTHONPATH (windows)
      if: matrix.os == 'windows-latest'
      run: echo "PYTHONPATH=${env:PYTHONPATH};${env:GITHUB_WORKSPACE};${env:GITHUB_WORKSPACE}\resources\lib;${env:GITHUB_WORKSPACE}\tests" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf-8 -Append
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies (linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install gettext
        sudo pip install coverage --install-option="--install-scripts=/usr/bin"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tox
      run: python -m tox -q -e flake8,py
    - name: Run pylint
      run: python -m pylint lib/ tests/
    - name: Compare translation strings
      run: make check-translations
    - name: Check for untranslated strings
      run: make check-untranslated
      continue-on-error: true
      if: matrix.os == 'ubuntu-latest'
    # Python 2.7 and Python 3.5 are no longer supported by proxy.py
    - name: Start proxy server, when supported
      run: python -m proxy --hostname 127.0.0.1 --log-level DEBUG &
      if: matrix.python-version == '3.6' || matrix.python-version == '3.7' || matrix.python-version == '3.8'
      #if: contains(["3.6", "3.7", "3.8"], matrix.python-version)
    - name: Run unit tests
      run: coverage run -m unittest discover
    - name: Run addon using cli
      run: coverage run -a default.py
    - name: Upload code coverage to CodeCov
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v1
      continue-on-error: true
    - name: Analyze with SonarCloud
      if: matrix.os == 'ubuntu-latest'
      uses: SonarSource/sonarcloud-github-action@v1.4
      with:
        args: >
          -Dsonar.organization=emilsvennesson
          -Dsonar.projectKey=emilsvennesson_script.module.inputstreamhelper
          -Dsonar.sources=lib/
          -Dsonar.tests=tests/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      continue-on-error: true
